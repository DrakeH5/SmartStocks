{"version":3,"file":"api.test.js","sourceRoot":"","sources":["../../../src/test/api/api.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*eslint-disable no-unused-expressions */\n\nimport \"mocha\";\n\nimport { expect } from \"chai\";\nimport dotenv from \"dotenv\";\n\nimport FinnhubAPI from \"../../api\";\n\ndotenv.config();\n\nconst finnHubKey = (process && process.env.FINNHUB_KEY) || \"\";\n\nconsole.log(\"finnHubKey\", finnHubKey);\n\nconst finnhubAPI = new FinnhubAPI(finnHubKey);\n\nconst symbol = \"AAPL\";\n\nconst startDATE = new Date();\nconst startDate = new Date(startDATE.setDate(startDATE.getDate() - 4));\nconst endDate = new Date();\n\ndescribe(\"FinnhubAPI\", () => {\n  it(\"should get candles in the passed 4 days for \" + symbol, async () => {\n    const candles = await finnhubAPI.getCandles(\n      symbol,\n      startDate,\n      endDate,\n      \"1\",\n    );\n    console.log(\"candles\", candles && candles[candles.length - 1]);\n    console.log(\"candles length\", candles && candles.length);\n    expect(candles).not.to.be.empty;\n  });\n\n  // it(\"should timeout after 4 secs\" + symbol, async () => {\n  //   const startDate = new Date(\"2020-03-28T04:00:00.000Z\");\n  //   const endDate = new Date(\"2020-03-30T04:00:00.000Z\");\n  //   const candles = await finnhubAPI.getCandles(\n  //     symbol,\n  //     startDate,\n  //     endDate,\n  //     \"1\",\n  //   );\n  //   console.log(\"candles\", candles);\n  //   console.log(\"candles length\", candles && candles.length);\n  //   expect(candles).not.to.be.empty;\n  // });\n\n  it(\"should get ticks for a symbol = \" + symbol, async () => {\n    const ticks = await finnhubAPI.getTick(symbol, startDate);\n    console.log(\"ticks\", ticks && ticks[ticks.length - 1]);\n    console.log(\"ticks length\", ticks && ticks.length);\n    return expect(ticks.length).not.equals(0);\n  });\n\n  it(\"should get quote for a symbol = \" + symbol, async () => {\n    const quote = await finnhubAPI.getQuote(symbol);\n    return expect(quote.close).not.equals(0);\n  });\n\n  it(\"should get Recommendation Trends for symbol = \" + symbol, async () => {\n    const recommendations = await finnhubAPI.GetRecommendationTrends(symbol);\n    console.log(recommendations);\n    return expect(recommendations[0].buy).not.equal(0);\n  });\n});\n"]}