{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/websocket/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter } from \"events\";\nimport WebSocket from \"ws\";\nimport { FINNHUB_KEY, TZ_ON } from \"../config\";\nimport { TickData } from \"../interface\";\nimport { checkIfMarketIsOpen } from \"../utils/checkIfMarketIsOpen\";\nimport { log } from \"../utils/log\";\nimport JSONDATA from \"../utils/text.utils\";\n\n/**\n * Finnhub websocket events\n */\nexport enum FinnhubWSEvents {\n  /**\n   * { symbol, date, close, volume? }\n   */\n  onData = \"onData\",\n\n  /**\n   * true / false\n   */\n  onReady = \"onReady\",\n\n  /**\n   * new Error()\n   */\n  onError = \"onError\",\n}\n\n/**\n * @Websocket\n * Stream real-time trades for US stocks, forex and crypto.\n * @see https://finnhub.io/docs/api#websocket-price\n */\nexport class FinnhubWS extends EventEmitter {\n  private socket: WebSocket = null as any;\n\n  private symbols: string[] = [];\n\n  token: string = FINNHUB_KEY;\n\n  constructor(token?: string) {\n    super();\n    if (token) {\n      this.token = token;\n    }\n    this.config();\n  }\n\n  /**\n   * config\n   */\n  public config() {\n    const self = this;\n\n    if (TZ_ON) {\n      if (checkIfMarketIsOpen()) {\n        return self.init();\n      } else {\n        log(\"Market is closed cannot subscribe to market data\");\n        // infinity loop\n        return setTimeout(() => {\n          log(\"FinnhubIO.config heartbeat\");\n          self.config();\n        }, 5000);\n      }\n    }\n\n    self.init();\n  }\n\n  /**\n   * init\n   */\n  private init() {\n    const self = this;\n\n    const token = self.token;\n\n    // Emulate for test\n    if (process.env.NODE_ENV === \"test\") {\n      setTimeout(async () => {\n        self.emit(FinnhubWSEvents.onReady, true);\n      }, 3000);\n      return;\n    }\n\n    log(\"FinnhubIO.init startup\", (token || \"\").slice(0, 5));\n\n    this.socket = new WebSocket(`wss://ws.finnhub.io?token=${token}`);\n\n    this.socket.on(\"open\", () => {\n      self.emit(FinnhubWSEvents.onReady, true);\n    });\n\n    this.socket.on(\"error\", (error: Error) => {\n      log(\"on error connecting socket\", error);\n\n      self.emit(FinnhubWSEvents.onError, error);\n      // setTimeout(() => self.config(), 2000);\n      return;\n    });\n\n    interface OnSocketData {\n      data: { s: string; p: number; t: number; v: string }[];\n      type: string;\n    }\n\n    this.socket.on(\"message\", (data: OnSocketData): void => {\n      // @ts-ignore\n      const parsedData: OnSocketData = JSONDATA(data);\n\n      if (!parsedData) {\n        return;\n      }\n\n      if (parsedData && parsedData.data && parsedData.data[0]) {\n        const priceItem = parsedData.data[0];\n        const symbol = priceItem.s;\n\n        const dataToSend: TickData = {\n          close: priceItem.p,\n          date: new Date(priceItem.t),\n          symbol: priceItem.s,\n          volume: +priceItem.v,\n        };\n\n        const topicSymbol = symbol;\n\n        log(topicSymbol, dataToSend.close);\n\n        self.emit(FinnhubWSEvents.onData, dataToSend);\n      }\n    });\n  }\n\n  /**\n   * Add symbol\n   * @param symbol: string\n   * @returns boolean\n   */\n  public addSymbol(symbol: string): boolean {\n    log(\"addSymbol\", symbol);\n\n    const self = this;\n\n    // If test\n    if (symbol === \"TEST\") {\n      setTimeout(() => {\n        const dataToSend: TickData = {\n          close: 1000,\n          date: new Date(),\n          symbol: \"STQ\",\n          volume: 0,\n        };\n\n        self.emit(FinnhubWSEvents.onData, dataToSend);\n      }, 2000);\n      return true;\n    }\n\n    if (!this.socket) {\n      return false;\n    }\n\n    try {\n      const isExist = this.symbols.includes(symbol);\n\n      if (isExist) {\n        return false;\n      }\n\n      // Add symbol\n      // Request market data for this symbol\n      this.symbols.push(symbol);\n      this.socket.send(JSON.stringify({ type: \"subscribe\", symbol }));\n      log(\"Added symbol\", symbol);\n      return true;\n    } catch (error) {\n      log(\"AddSybols \", error);\n      return false;\n    }\n  }\n\n  /**\n   * Removes symbol from subscription list\n   * @param symbol\n   */\n  public removeSymbol(symbol: string): boolean {\n    try {\n      const isExist = this.symbols.includes(symbol);\n      if (isExist) {\n        // Request unsubscribe market data for this symbol\n        this.symbols = this.symbols.filter((item) => item !== symbol);\n        this.socket.send(JSON.stringify({ type: \"unsubscribe\", symbol }));\n\n        log(\"new symbols are -------------------------->\", this.symbols);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      log(\"Error removing symbol\", error);\n      return false;\n    }\n  }\n}\n\nexport default FinnhubWS;\n"]}